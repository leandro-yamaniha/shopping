spring:
  application:
    name: shopping-backend
  
  profiles:
    active: dev

  # R2DBC Configuration (Reactive Database)
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/shopping_db
    username: shopping_user
    password: shopping_pass
    pool:
      initial-size: 10
      max-size: 20
      max-idle-time: 30m
      validation-query: SELECT 1

  # Flyway Configuration (Database Migrations)
  flyway:
    url: jdbc:postgresql://localhost:5432/shopping_db
    user: shopping_user
    password: shopping_pass
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false

  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080

# Server Configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Application Configuration
app:
  jwt:
    secret: mySecretKey123456789012345678901234567890
    expiration: 86400000 # 24 hours
  cors:
    allowed-origins: 
      - http://localhost:3000
      - http://localhost:19006
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    allow-credentials: true

# Logging Configuration
logging:
  level:
    com.shopping: DEBUG
    org.springframework.r2dbc: DEBUG
    io.r2dbc.postgresql.QUERY: DEBUG
    io.r2dbc.postgresql.PARAM: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/shopping_db
  
  flyway:
    url: jdbc:postgresql://localhost:5432/shopping_db

logging:
  level:
    root: INFO
    com.shopping: DEBUG

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  
  r2dbc:
    url: r2dbc:postgresql://postgres:5432/shopping_db
  
  flyway:
    url: jdbc:postgresql://postgres:5432/shopping_db

app:
  cors:
    allowed-origins:
      - http://localhost:3000
      - http://frontend-web:3000

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  r2dbc:
    url: ${DATABASE_URL:r2dbc:postgresql://localhost:5432/shopping_db}
    username: ${DATABASE_USERNAME:shopping_user}
    password: ${DATABASE_PASSWORD:shopping_pass}
  
  flyway:
    url: ${DATABASE_JDBC_URL:jdbc:postgresql://localhost:5432/shopping_db}
    user: ${DATABASE_USERNAME:shopping_user}
    password: ${DATABASE_PASSWORD:shopping_pass}

app:
  jwt:
    secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
    expiration: ${JWT_EXPIRATION:86400000}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}

logging:
  level:
    root: WARN
    com.shopping: INFO
